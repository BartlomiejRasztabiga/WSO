- name: "Scenariusz 6: NAT + port forwarding"
  hosts: localhost
  become: true
  vars_files:
    - ../vars/scenario_6.yaml

  tasks:
    - name: Utwórz sieć NAT z port forwarding (rola network)
      include_role:
        name: network

    - name: Tworzenie VM w NAT z port forwarding
      include_role:
        name: vm
      vars:
        user_data_template: user-data-nat-port-forwarding.j2

    - name: Pobierz IP vm
      shell: virsh domifaddr {{ vm_name }} | grep -oP '(\d{1,3}\.){3}\d{1,3}' | head -n1
      register: vm_ip_result
      retries: 10
      delay: 3
      until: vm_ip_result.stdout != ""
      changed_when: false

    - name: Poczekaj aż port SSH (22) będzie otwarty
      wait_for:
        host: "{{ vm_ip_result.stdout }}"
        port: 22
        delay: 5
        timeout: 120
        state: started

    - name: Dodaj VM do inventory
      add_host:
        name: "{{ vm_name }}"
        ansible_host: "{{ vm_ip_result.stdout }}"
        ansible_user: ubuntu
        ansible_ssh_common_args: '-o StrictHostKeyChecking=no'
        groups: dynamic_vms

    - name: Dodaj reguły PREROUTING
      ansible.builtin.command: >
        iptables -t nat -A PREROUTING -p tcp -d {{ bridge_host_ip }} --dport {{ item.host_port }} -j DNAT --to-destination {{ vm_ip_result.stdout }}:{{ item.guest_port }}
      loop: "{{ nat_port_forwarding }}"
      when: vm_ip_result.stdout != ""
    
    - name: Dodaj reguły OUTPUT (ruch lokalny z hosta)
      ansible.builtin.command: >
        iptables -t nat -A OUTPUT -p tcp -d {{ bridge_host_ip }} --dport {{ item.host_port }} -j DNAT --to-destination {{ vm_ip_result.stdout }}:{{ item.guest_port }}
      loop: "{{ nat_port_forwarding }}"
      when: vm_ip_result.stdout != ""

    - name: Zezwól na FORWARD do VM
      ansible.builtin.command: >
        iptables -I FORWARD -p tcp -d {{ vm_ip_result.stdout }} --dport {{ item.guest_port }} -j ACCEPT
      loop: "{{ nat_port_forwarding }}"
      when: vm_ip_result.stdout != ""

    - name: Zezwól na FORWARD odpowiedzi (conntrack)
      ansible.builtin.command: >
        iptables -I FORWARD -m conntrack --ctstate ESTABLISHED,RELATED -j ACCEPT
      when: vm_ip_result.stdout != ""


- name: "Test: NAT + port forwarding"
  hosts: localhost
  become: true
  vars_files:
    - ../vars/scenario_6.yaml

  tasks:
    - name: Sprawdź dostęp do SSH na hoście (port 2222)
      shell: >
        sshpass -p 'ubuntu'
        ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -p 2222 ubuntu@{{ bridge_host_ip }}  echo "SSH działa" || echo "Brak odpowiedzi SSH"
      register: ssh_test
      ignore_errors: true

    - name: Pokaż wynik testu SSH
      debug:
        var: ssh_test.stdout_lines

    - name: Sprawdź dostęp do HTTP na hoście (port 8080)
      shell: curl -s http://{{ bridge_host_ip }}:8080 || echo "Brak odpowiedzi HTTP"
      register: http_test
      ignore_errors: true

    - name: Pokaż wynik testu HTTP
      debug:
        var: http_test.stdout_lines
